name: Release

on: [push]

jobs:
  tests:
    runs-on: windows-latest
    timeout-minutes: 5
    strategy:
      matrix:
        nim: [ 'stable' ]
    steps:
      - uses: actions/checkout@v2
      - name: Download ddls
        run: iwr https://nim-lang.org/download/dlls.zip -OutFile dlls.zip && Expand-Archive dlls.zip && cp dlls/*.dll .
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v2
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ matrix.nim }}
        if: runner.os != 'Windows'
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ matrix.nim }}
      # - run: nimble build -Y
      - run: nimble test -y
      - name: Release Build
        run: nimble -d:ssl -d:release build
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
